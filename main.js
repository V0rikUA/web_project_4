!function(){"use strict";class e{constructor(e){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._fieldSelector=e.fieldSelector,this._formElement=document.querySelector(this._formSelector),this._fieldsetElement=this._formElement.querySelector(this._fieldSelector),this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e,t){const i=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),i.textContent=t,i.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t){this._name=e.name,this._link=e.link,this._cardTemplateSelector=t.cardTemplateSelector,this._cardSelector=t.cardSelector,this._imageSelector=t.imageSelector,this._imageDescriptionSelector=t.imageDescriptionSelector,this._likeButtonSelector=t.likeButtonSelector,this._likeActiveSelector=t.likeActiveSelector,this._deleteButtonSelector=t.deleteButtonSelector,this._previewPopupImageSelector=t.previewPopupImageSelector,this._previewPopupDescriptionSelector=t.previewPopupDescriptionSelector,this._handleCardImageClick=t.handleCardImageClick,this._cardTemplate=document.querySelector(this._cardTemplateSelector)}_getCardElement(){return this._cardTemplate.content.querySelector(this._cardSelector).cloneNode(!0)}_populateCardInfo(){const e=this._cardElement.querySelector(this._imageDescriptionSelector),t=this._cardElement.querySelector(this._imageSelector);e.textContent=this._name,t.src=this._link,t.alt=this._name}_handleLikeButtonClick(){this._likeButton.classList.toggle(this._likeActiveSelector)}_handleDeleteButtonClick(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._likeButton=this._cardElement.querySelector(this._likeButtonSelector),this._likeButton.addEventListener("click",(()=>this._handleLikeButtonClick())),this._cardElement.querySelector(this._deleteButtonSelector).addEventListener("click",(()=>this._handleDeleteButtonClick())),this._cardElement.querySelector(this._imageSelector).addEventListener("click",(()=>{this._handleCardImageClick(this._link,this._name,this._name)}))}getCard(){return this._cardElement=this._getCardElement(),this._populateCardInfo(),this._setEventListeners(),this._cardElement}}const i=document.querySelector(".profile__button-edit"),s=document.querySelector(".form__input_type_name"),r=document.querySelector(".form__input_type_title"),o=document.querySelector(".profile__button-add-contetnt"),n=(document.querySelector(".form_type_new-gallery-item"),".popup_type_preview");class l{constructor(e){this._popupElement=document.querySelector(e),this._popupCloseButton=this._popupElement.querySelector(".popup__close-button"),this._popupActiveToggleSelector="popup_active",this._handleEscClose=this._handleEscClose.bind(this),this._handleBackgroundClickClose=this._handleBackgroundClickClose.bind(this),this.close=this.close.bind(this)}open(){this._popupElement.classList.add(this._popupActiveToggleSelector),this.setEventListeners()}close(){this._popupElement.classList.remove(this._popupActiveToggleSelector),this.removeEventListeners()}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleBackgroundClickClose(e){e.target===e.currentTarget&&this.close()}setEventListeners(){this._popupCloseButton.addEventListener("click",this.close),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleBackgroundClickClose)}removeEventListeners(){this._popupCloseButton.removeEventListener("click",this.close),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleBackgroundClickClose)}}class a extends l{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupElement.querySelector("form"),this._handleSubmitButton=this._handleSubmitButton.bind(this)}_getInputValues(){return Array.from(this._popupElement.querySelectorAll("input")).reduce(((e,t)=>({...e,[t.name]:t.value})),{})}_handleSubmitButton(e){e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this._handleSubmitButton)}removeEventListeners(){super.removeEventListeners(),this._form.removeEventListener("submit",this._handleSubmitButton)}close(){super.close(),this._form.reset()}}const c=new class{constructor(e,t){this._userNameElement=document.querySelector(e),this._userProfessionElement=document.querySelector(t)}getUserInfo(){return{userName:this._userNameElement.textContent,userJob:this._userProfessionElement.textContent}}setUserInfo(e,t){this._userNameElement.textContent=e,this._userProfessionElement.textContent=t}}(".profile__name",".profile__profession"),u=new class extends l{constructor(e){super(e),this._previewPopupImage=document.querySelector(".popup__preview-image"),this._previewPopupDescription=document.querySelector(".popup__description")}open(e,t,i){this._previewPopupImage.src=e,this._previewPopupImage.alt=t,this._previewPopupDescription.textContent=i,super.open()}}(n),_=new a(".popup_type_profile",(e=>{c.setUserInfo(e.name,e.about),_.close()})),p=new a(".popup_type_new-gallery-item",(e=>{const t={name:e.newItemTitle,link:e.newItemImageLink};p.close(),v.addItem(t)})),h={cardTemplateSelector:"#gallary-list__item__template",cardSelector:".gallery-list__item",imageSelector:".gallery-list__image",imageDescriptionSelector:".gallery-list__image-description",likeActiveSelector:"gallery-list__like-button-active",likeButtonSelector:".gallery-list__like-button",deleteButtonSelector:".gallery-list__delete-button",previewPopupImageSelector:".popup__preview-image",previewPopupDescriptionSelector:".popup__description",previewPopupElement:n,handleCardImageClick:(e,t,i)=>{u.open(e,t,i)}},m=new e({formSelector:".form_type_profile",inputSelector:".form__input",errorClass:"form__input-error_active",inactiveButtonClass:"form__submit-button-inactive",inputErrorClass:"form__input_type_error",submitButtonSelector:".form__submit-button",fieldSelector:".form__set-profile"}),d=new e({formSelector:".form_type_new-gallery-item",inputSelector:".form__input",errorClass:"form__input-error_active",inactiveButtonClass:"form__submit-button-inactive",inputErrorClass:"form__input_type_error",submitButtonSelector:".form__submit-button",fieldSelector:".form__set-gallery"}),v=new class{constructor(e,t){let{items:i=null,renderer:s}=e;this._items=i,this._renderer=s,this._container=document.querySelector(t)}renderer(){if(null!==this._items)try{this._items.forEach((e=>{this.addItem(e)}))}catch(e){throw e instanceof TypeError?"items variable is not of type Array":"".concat(e)}}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg",alt:"the view of the river surrounded by trees in front of mountains"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg",alt:"the view of lake between two mountains"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg",alt:"the view of sunset upon the mountains"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg",alt:"the view of mountains at night under the bright stars"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg",alt:"lake view in the mountains"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg",alt:"the view of the boats at mountain lake near the pier"}],renderer:e=>new t(e,h).getCard()},".gallery-list");v.renderer(),i.addEventListener("click",(()=>{var e;e=c.getUserInfo(),s.value=e.userName,r.value=e.userJob,m.resetValidation(),_.open()})),o.addEventListener("click",(()=>{d.resetValidation(),p.open()})),m.enableValidation(),d.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,